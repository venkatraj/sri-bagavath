@mixin column-width($width: 100%) {
    width: $width;
}

// Rem output with px fallback
@mixin font-size($sizeValue: 1.6) {
	font-size: ($sizeValue * 10) + px;
	font-size: $sizeValue + rem;
}

// Box model
@mixin box-sizing($box-model) {
	-webkit-box-sizing: $box-model; // Safari <= 7
	-moz-box-sizing: $box-model; // Firefox <= 19
	box-sizing: $box-model;
}

// Border radius
@mixin border-radius($radius) {
	background-clip: padding-box; /* stops bg color from leaking outside the border: */
	-webkit-border-radius: $radius;
	border-radius: $radius;
}

// Center block
@mixin center-block {
	display: block;
	margin: 0 auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Common border
@mixin border-bottom($weight: 3px, $style: solid, $color: $primary_color) {
	border-bottom: $weight solid $color;
}

// Box Shadow
@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
	-webkit-box-shadow:$top $left $blur $color #{$inset};
	-moz-box-shadow:$top $left $blur $color #{$inset};
	box-shadow:$top $left $blur $color #{$inset};
}

// Transition
@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
} 
@mixin transition-default($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}


@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
	-webkit-box-shadow:$top $left $blur $color #{$inset};
	-moz-box-shadow:$top $left $blur $color #{$inset};
	box-shadow:$top $left $blur $color #{$inset};
}

// -----------------------------------------
// TRANSFORMATION RULES
// -----------------------------------------
@mixin rotate($rotate: 0) {
	-webkit-transform: 	rotate($rotate +deg);
	-moz-transform: 	rotate($rotate +deg);
	-ms-transform: 		rotate($rotate +deg);
	-o-transform: 		rotate($rotate +deg);
	transform: 			rotate($rotate +deg);
}

@mixin scale($scale: 1) {
	-webkit-transform: 	scale($scale);
	-moz-transform: 	scale($scale);
	-ms-transform: 		scale($scale);
	-o-transform: 		scale($scale);
	transform: 			scale($scale);
}

@mixin skew($skew: 0) {
	-webkit-transform: 	skew($skew +deg);
	-moz-transform: 	skew($skew +deg);
	-ms-transform: 		skew($skew +deg);
	-o-transform: 		skew($skew +deg);
	transform: 			skew($skew +deg);
}

@mixin skewX($skewX: 0) {
	-webkit-transform: 	skewX($skewX +deg);
	-moz-transform: 	skewX($skewX +deg);
	-ms-transform: 		skewX($skewX +deg);
	-o-transform: 		skewX($skewX +deg);
	transform: 			skewX($skewX +deg);
}

@mixin skewY($skewY: 0) {
	-webkit-transform: 	skewY($skewY +deg);
	-moz-transform: 	skewY($skewY +deg);
	-ms-transform: 		skewY($skewY +deg);
	-o-transform: 		skewY($skewY +deg);
	transform: 			skewY($skewY +deg);
}

@mixin translate($left: 0, $top: 0) {
	-webkit-transform: 	translate($left +px, $top +px);
	-moz-transform: 	translate($left +px, $top +px);
	-ms-transform: 		translate($left +px, $top +px);
	-o-transform: 		translate($left +px, $top +px);
	transform: 			translate($left +px, $top +px);
}

// size 
@mixin size($width, $height: $width) {
      width: $width;
      height: $height;
}

// Position
@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// Opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// @include rotate(15); rotates object 15 degrees
// @include scale(1.5); scales object 50% up
// @include skew(12); skews object 12 degrees
// @include translate(10, -20); moves object 10px left, -20px top 
// @include box-shadow(inset, 0, 0, 0, transparent);
// @include size(100%, 1px);
// @include opacity(0.8);
// @include position(absolute, $top: 1em, $left: 50%);